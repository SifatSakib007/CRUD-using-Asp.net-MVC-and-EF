// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuadTheoryLimited_Task.Data;

#nullable disable

namespace QuadTheoryLimited_Task.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuadTheoryLimited_Task.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(445),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(456),
                            Name = "Class 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(457),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(457),
                            Name = "Class 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(458),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(459),
                            Name = "Class 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(459),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(460),
                            Name = "Class 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(461),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(461),
                            Name = "Class 5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(462),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(462),
                            Name = "Class 6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(463),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(464),
                            Name = "Class 7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(464),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(465),
                            Name = "Class 8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(466),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(466),
                            Name = "Class 9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(467),
                            ModificationDate = new DateTime(2024, 6, 2, 17, 6, 7, 306, DateTimeKind.Local).AddTicks(467),
                            Name = "Class 10"
                        });
                });

            modelBuilder.Entity("QuadTheoryLimited_Task.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("QuadTheoryLimited_Task.Models.Student", b =>
                {
                    b.HasOne("QuadTheoryLimited_Task.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("QuadTheoryLimited_Task.Models.Class", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
